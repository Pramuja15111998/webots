#VRML_SIM R2022b utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# documentation url: https://www.cyberbotics.com/doc/automobile/ackermannvehicle
# Generic model of an Ackerman vehicle. Positions and joints of the wheels are set automatically
# using 'trackFont', 'trackRear' and 'wheelbase' fields
# This model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).
# template language: javascript

EXTERNPROTO "VehicleWheel.proto"

PROTO AckermannVehicle [
  field SFVec3f    translation                    0 0 0.4
  field SFRotation rotation                       0 0 1 0
  field SFString   name                           "vehicle"
  field SFString   model                          "Ackermann vehicle"
  field SFString   controller                     "<generic>"
  field MFString   controllerArgs                 []
  field SFBool     supervisor                     FALSE
  field SFBool     synchronization                TRUE
  field SFFloat    trackFront                     1.7
  field SFFloat    trackRear                      1.7
  field SFFloat    wheelbase                      4.0
  field SFFloat    minSteeringAngle              -1
  field SFFloat    maxSteeringAngle               1
  field SFFloat    suspensionFrontSpringConstant  100000
  field SFFloat    suspensionFrontDampingConstant 4000
  field SFFloat    suspensionRearSpringConstant   100000
  field SFFloat    suspensionRearDampingConstant  4000
  field SFFloat    wheelsDampingConstant          5
  field SFFloat    maxSteeringTorque              10000
  field MFNode     extensionSlot                  []
  field SFNode     boundingObject                 NULL
  field SFNode     physics                        NULL
  field SFFloat    radarCrossSection              100
  field MFColor    recognitionColors              []
  field SFNode     wheelFrontRight                NULL
  field SFNode     wheelFrontLeft                 NULL
  field SFNode     wheelRearRight                 NULL
  field SFNode     wheelRearLeft                  NULL
  field MFNode     axisDevicesFrontRight          []
  field MFNode     axisDevicesFrontLeft           []
  field MFNode     axisDevicesRearRight           []
  field MFNode     axisDevicesRearLeft            []
  field SFString   customData                     ""
  field SFString   window                         "<generic>"
]
{
  %<
    // tracks check
    let frontTrack = fields.trackFront.value;
    if (frontTrack <= 0.0) {
      frontTrack = fields.trackFront.defaultValue;
      console.error('\'trackFront\' must be strictly positive. Value reset to ' + frontTrack + '.');
    }
    let rearTrack = fields.trackRear.value;
    if (rearTrack <= 0.0) {
      rearTrack = fields.trackRear.defaultValue;
      console.error('\'trackRear\' must be strictly positive. Value reset to ' + rearTrack + '.');
    }
    // wheelbase check
    let wheelbase = fields.wheelbase.value;
    if (wheelbase <= 0.0) {
      wheelbase = fields.wheelbase.defaultValue;
      console.error('\'wheelbase\' must be strictly positive. Value reset to ' + wheelbase + '.');
    }
  >%
  Robot {
    translation IS translation
    rotation IS rotation
    children [
      Group {
        children IS extensionSlot
      }
    ]
    name IS name
    model IS model
    controller IS controller
    controllerArgs IS controllerArgs
    customData IS customData
    window IS window
    supervisor IS supervisor
    synchronization IS synchronization
    boundingObject IS boundingObject
    physics IS physics
    radarCrossSection IS radarCrossSection
    recognitionColors IS recognitionColors
  }
}
