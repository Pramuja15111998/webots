#VRML_SIM R2022b utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# documentation url: https://www.cyberbotics.com/doc/automobile/car
# Model of an BMW X5 car using the Car proto as a base.
# The vehicle is modelled with realistic physics properties: motor torques, body mass, friction forces, suspensions, etc.
# This model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).
# For the last 6 fields to have any effect, the 'interior' has to be enabled.
# template language: javascript

EXTERNPROTO "webots://projects/vehicles/protos/abstract/CarSteeringWheel.proto"
EXTERNPROTO "webots://projects/vehicles/protos/abstract/Car.proto"
EXTERNPROTO "BmwX5Wheel.proto"
EXTERNPROTO "webots://projects/vehicles/protos/abstract/VehicleLights.proto"
EXTERNPROTO "BmwX5FrontLight.proto"
EXTERNPROTO "BmwX5RightIndicator.proto"
EXTERNPROTO "BmwX5LeftIndicator.proto"
EXTERNPROTO "BmwX5AntiFogLight.proto"
EXTERNPROTO "BmwX5RearLight.proto"
EXTERNPROTO "BmwX5BrakingLight.proto"
EXTERNPROTO "BmwX5BackwardsLight.proto"
EXTERNPROTO "BmwX5RightWiper.proto"
EXTERNPROTO "BmwX5LeftWiper.proto"
EXTERNPROTO "BmwX5Mesh.proto"
EXTERNPROTO "BmwX5InnerWindow.proto"
EXTERNPROTO "BmwX5RightWingMirror.proto"
EXTERNPROTO "BmwX5LeftWingMirror.proto"
EXTERNPROTO "BmwX5Interior.proto"
EXTERNPROTO "BmwX5CentralMirrorFrame.proto"
EXTERNPROTO "BmwX5CentralMirror.proto"
EXTERNPROTO "BmwX5RearInterior.proto"

PROTO BmwX5 [
  field SFVec3f      translation              0 0 0.4
  field SFRotation   rotation                 0 0 1 0
  field SFColor      color                    0.43 0.11 0.1
  field SFString     engineSound              "sounds/engine.wav"
  field SFString     name                     "vehicle"
  field SFString     controller               "<generic>"
  field MFString     controllerArgs           []
  field SFBool       supervisor               FALSE
  field SFBool       synchronization          TRUE
  field SFBool       windshieldWipers         TRUE
  field SFBool       frontSpotLights          FALSE
  field SFBool       rearMirror               FALSE
  field SFBool       leftWingMirror           FALSE
  field SFBool       rightWingMirror          FALSE
  field SFFloat      mirrorFar                200.0
  field MFNode       sensorsSlotFront         []
  field MFNode       sensorsSlotRear          []
  field MFNode       sensorsSlotTop           []
  field MFNode       sensorsSlotCenter        []
  field SFBool       interior                 TRUE
  field SFBool       dynamicSpeedDisplay      TRUE
  field SFBool       indicatorLevers          TRUE
  field SFNode       steeringWheel            CarSteeringWheel {}
  field SFBool       completeInterior         TRUE
  field SFBool       shifter                  TRUE
  field SFFloat      outerWindowTransparency  0.4
  field SFFloat      innerWindowTransparency  0.7
  field SFBool       innerWindowDust          FALSE
  field SFString     window                   "automobile"
]
{
  %<
    let interior = fields.interior.value;
    let outerWindowTransparency = fields.outerWindowTransparency.value;
    let innerWindowTransparency = fields.innerWindowTransparency.value;
    const frontSpotLights = fields.frontSpotLights.value;
    const rearMirror = fields.rearMirror.value;
    const dynamicSpeedDisplay = fields.dynamicSpeedDisplay.value;
    const completeInterior = fields.completeInterior.value;
    const innerWindowDust = fields.innerWindowDust.value;
    if (!interior && rearMirror)
      console.error('The rear mirror can only enabled if \'interior\' is set to TRUE.');

    if (!interior && (outerWindowTransparency !== fields.outerWindowTransparency.defaultValue || innerWindowTransparency !== fields.innerWindowTransparency.defaultValue)) {
      outerWindowTransparency = fields.outerWindowTransparency.defaultValue;
      innerWindowTransparency = fields.innerWindowTransparency.defaultValue;
      console.error('Window transparencies were reset to default values.');
    }
    if (!interior && (dynamicSpeedDisplay || completeInterior || innerWindowDust))
      console.error('In order to see the effect of the last 6 fields, the \'interior\' has to be enabled.');
  >%
  Car {
    translation IS translation
    rotation IS rotation
    engineSound IS engineSound
    trackFront 1.628
    trackRear 1.628
    wheelbase 2.995
    time0To100 7
    engineMinRPM 1000
    engineMaxRPM 6500
    brakeCoefficient 1800  # calibrated for braking from 100 to 0km/h in 36.5m
    engineFunctionCoefficients 34.11 0.136 -0.00001461
    wheelsDampingConstant 2
    gearRatio   [-12.5 12.5 8 5.35 4.3 4]
    wheelFrontLeft NULL
    wheelFrontRight NULL
    wheelRearRight NULL
    wheelRearLeft NULL
    extensionSlot [

      # vehicle interior
      %< if (interior) { >%
              Transform {
                translation 2.03 0.43 0.61
                rotation 0.57735 0.57735 0.57735 2.094395
                children [
                  Slot {
                    type "vehicle steering wheel"
                    endPoint IS steeringWheel
                  }
                ]
              }

      %< } >%

    ]
    name IS name
    model "BMW X5"
    controller IS controller
    controllerArgs IS controllerArgs
    supervisor IS supervisor
    synchronization IS synchronization

    radarCrossSection 100
    recognitionColors [
      %<= fields.color.value.r >% %<= fields.color.value.g >% %<= fields.color.value.b >%
    ]
    physics Physics {
      density -1
      mass 2000
      centerOfMass [
        1.2975 0 0.1
      ]
      inertiaMatrix [
        1125.07 4473.54 4346.1
        0 846.89 0
      ]
    }
    window IS window
  }
}
